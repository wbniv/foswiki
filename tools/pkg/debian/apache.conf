# We set an environment variable called blockAccess.
#
# Setting a BrowserMatchNoCase to ^$ is important. It prevents TWiki from
# including its own topics as URLs and also prevents other TWikis from
# doing the same. This is important to prevent the most obvious
# Denial of Service attacks.
#
# You can expand this by adding more BrowserMatchNoCase statements to
# block evil browser agents trying the impossible task of mirroring a twiki
#
# Example:
# BrowserMatchNoCase ^SiteSucker blockAccess
# BrowserMatchNoCase ^$ blockAccess

BrowserMatchNoCase ^Accoona blockAccess
BrowserMatchNoCase ^ActiveAgent blockAccess
BrowserMatchNoCase ^Attache blockAccess
BrowserMatchNoCase BecomeBot blockAccess
BrowserMatchNoCase ^bot blockAccess
BrowserMatchNoCase Charlotte/ blockAccess
BrowserMatchNoCase ^ConveraCrawler blockAccess
BrowserMatchNoCase ^CrownPeak-HttpAgent blockAccess
BrowserMatchNoCase ^EmailCollector blockAccess
BrowserMatchNoCase ^EmailSiphon blockAccess
BrowserMatchNoCase ^e-SocietyRobot blockAccess
BrowserMatchNoCase ^Exabot blockAccess
BrowserMatchNoCase ^FAST blockAccess
BrowserMatchNoCase ^FDM blockAccess
BrowserMatchNoCase ^GetRight/6.0a blockAccess
BrowserMatchNoCase ^GetWebPics blockAccess
BrowserMatchNoCase ^Gigabot blockAccess
BrowserMatchNoCase ^gonzo1 blockAccess
BrowserMatchNoCase ^Google\sSpider blockAccess
BrowserMatchNoCase ^ichiro blockAccess
BrowserMatchNoCase ^ie_crawler blockAccess
BrowserMatchNoCase ^iGetter blockAccess
BrowserMatchNoCase ^IRLbot blockAccess
BrowserMatchNoCase Jakarta blockAccess
BrowserMatchNoCase ^Java blockAccess
BrowserMatchNoCase ^KrakSpider blockAccess
BrowserMatchNoCase ^larbin blockAccess
BrowserMatchNoCase ^LeechGet blockAccess
BrowserMatchNoCase ^LinkWalker blockAccess
BrowserMatchNoCase ^Lsearch blockAccess
BrowserMatchNoCase ^Microsoft blockAccess
BrowserMatchNoCase ^MJ12bot blockAccess
BrowserMatchNoCase MSIECrawler blockAccess
BrowserMatchNoCase ^MSRBOT blockAccess
BrowserMatchNoCase ^noxtrumbot blockAccess
BrowserMatchNoCase ^NutchCVS blockAccess
BrowserMatchNoCase ^RealDownload blockAccess
BrowserMatchNoCase ^Rome blockAccess
BrowserMatchNoCase ^Roverbot blockAccess
BrowserMatchNoCase ^schibstedsokbot blockAccess
BrowserMatchNoCase ^Seekbot blockAccess
BrowserMatchNoCase ^SiteSnagger blockAccess
BrowserMatchNoCase ^SiteSucker blockAccess
BrowserMatchNoCase ^Snapbot blockAccess
BrowserMatchNoCase ^sogou blockAccess
BrowserMatchNoCase ^SpiderKU blockAccess
BrowserMatchNoCase ^SpiderMan blockAccess
BrowserMatchNoCase ^Squid blockAccess
BrowserMatchNoCase ^Teleport blockAccess
BrowserMatchNoCase ^User-Agent\: blockAccess
BrowserMatchNoCase VoilaBot blockAccess
BrowserMatchNoCase ^voyager blockAccess
BrowserMatchNoCase ^W3C blockAccess
BrowserMatchNoCase ^w3search blockAccess
BrowserMatchNoCase ^Web\sDownloader blockAccess
BrowserMatchNoCase ^WebCopier blockAccess
BrowserMatchNoCase ^WebDevil blockAccess
BrowserMatchNoCase ^WebSec blockAccess
BrowserMatchNoCase ^WebVac blockAccess
BrowserMatchNoCase ^Webwhacker blockAccess
BrowserMatchNoCase ^Webzip blockAccess
BrowserMatchNoCase ^Wells blockAccess
BrowserMatchNoCase ^WhoWhere blockAccess
BrowserMatchNoCase www\.netforex\.org blockAccess
BrowserMatchNoCase ^WX_mail blockAccess
BrowserMatchNoCase ^yacybot blockAccess
BrowserMatchNoCase ^ZIBB blockAccess
BrowserMatchNoCase ^$ blockAccess



# Added for twiki
Alias /twiki/pub /var/www/twiki/pub

RedirectMatch /twiki(/([A-Z].*)?)?$ http://your.domain.com/cgi-bin/twiki/view$1

#TODO: detect if apache1 or apache 2...
#<IfModule mod_perl.c>
#    <IfDefine APACHE2>
#        #mod_perl for apache2
#        PerlRequire /var/lib/twiki/tools/mod_perl_startup.pl
#        # Turn on taint checking
#        PerlSwitches -T
#    </IfDefine>
    #<IfDefine !APACHE2>
    #    #assume this is apache1.3.x
    #    PerlRequire /var/lib/twiki/tools/mod_perl_startup.pl
    #    # Turn on taint checking (only add line below if it is not already in the httpd.conf)   
    #    PerlTaintCheck On
    #</IfDefine>
#</IfModule>

# make sure this is even needed, and ref the doc section needing it 
<Directory /usr/lib/cgi-bin/twiki/> 
	BrowserMatchNoCase ^$ anonymous_spider
	
	# Now set default access rights.
	Order Allow,Deny
	Allow from all
    Deny from env=blockAccess

	# Authentication type (htpasswd file) (comment out this if you configure htpasswd / LDAP support)
	AuthUserFile /var/lib/twiki/data/.htpasswd
	AuthName 'Enter your WikiName: (First name and last name, no space, no dots, capitalized, e.g. JohnSmith). Cancel to register if you do not have one.'
	AuthType Basic

	ErrorDocument 401 /cgi-bin/twiki/view/TWiki/UserRegistration

	Options +ExecCGI +FollowSymLinks
	SetHandler cgi-script
	AllowOverride all
	Allow from all
	
	<FilesMatch "^configure">
		Order Deny,Allow
		Deny from all
		Allow from 127.0.0.1
		Require user WikiGuest
		Satisfy Any
	</FilesMatch>

	<FilesMatch "(attach|edit|manage|rename|save|upload|mail|logon|.*auth).*">
		require valid-user
	</FilesMatch>
	
#	<IfModule mod_perl.c>
#        <IfDefine APACHE2>
#            #mod_perl - apache 2
#            # This matches all lower-case file names, except
#            # those starting with "configure"
#            <FilesMatch "^(?!configure)[a-z.]+$">
#                    SetHandler perl-script
#                    PerlResponseHandler ModPerl::Registry
#                    PerlSendHeader On
#                    PerlOptions +ParseHeaders
#            </FilesMatch>
#        </IfDefine>
        #<IfDefine !APACHE2>
        #    #assume this is apache1.3.x
        #    # This matches all lower-case file names, except
        #    # those starting with "configure"
        #    <FilesMatch "^(?!configure)[a-z.]+$">
        #        SetHandler perl-script
        #        PerlHandler Apache::Registry
        #    </FilesMatch>            
        #</IfDefine>
#	</IfModule>
</Directory>

# This sets the options on the pub directory, which contains attachments and
# other files like CSS stylesheets and icons. AllowOverride None stops a
# user installing a .htaccess file that overrides these options.
# Note that files in pub are *not* protected by TWiki Access Controls,
# so if you want to control access to files attached to topics you need to
# block access to the specific directories same way as the ApacheConfigGenerator
# blocks access to the pub directory of the Trash web
<Directory "/var/www/twiki/pub">
    Options None
    AllowOverride None
    Order Allow,Deny
    Allow from all
    Deny from env=blockAccess

    # Disable execusion of PHP scripts
    <IfModule mod_php5.c>
    	php_admin_flag engine off
    </IfModule>
    <IfModule mod_php4.c>
    	php_admin_flag engine off
    </IfModule>

    # This line will redefine the mime type for the most common types of scripts
    # It will also deliver HTML files as if they are text files
    AddType text/plain .html .htm .shtml .php .php3 .phtml .phtm .pl .py .cgi
</Directory>

# End twiki Configuration Block
