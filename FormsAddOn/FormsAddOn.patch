Index: lib/TWiki.pm
===================================================================
RCS file: /e/www/CVS/twiki-cairo/lib/TWiki.pm,v
retrieving revision 1.2
retrieving revision 1.2.4.1
diff -c -r1.2 -r1.2.4.1
*** lib/TWiki.pm	26 Dec 2004 12:38:28 -0000	1.2
--- lib/TWiki.pm	27 Dec 2004 16:54:58 -0000	1.2.4.1
***************
*** 3197,3203 ****
      my( $theWeb, $theTopic, $text, $meta, $isTopRev ) = @_;
  
      $text =~ s/%META{\s*"form"\s*}%/&TWiki::Render::renderFormData( $theWeb, $theTopic, $meta )/ge;    #this renders META:FORM and META:FIELD
!     $text =~ s/%META{\s*"formfield"\s*(.*?)}%/&TWiki::Render::renderFormField( $meta, $1 )/ge;                 #TODO: what does this do? (is this the old forms system, and so can be deleted)
      $text =~ s/%META{\s*"attachments"\s*(.*)}%/&TWiki::Attach::renderMetaData( $theWeb,
                                                  $theTopic, $meta, $1, $isTopRev )/ge;                                       #renders attachment tables
      $text =~ s/%META{\s*"moved"\s*}%/&TWiki::Render::renderMoved( $theWeb, $theTopic, $meta )/ge;      #render topic moved information
--- 3197,3203 ----
      my( $theWeb, $theTopic, $text, $meta, $isTopRev ) = @_;
  
      $text =~ s/%META{\s*"form"\s*}%/&TWiki::Render::renderFormData( $theWeb, $theTopic, $meta )/ge;    #this renders META:FORM and META:FIELD
!     $text =~ s/%META{\s*"formfield"\s*(.*)}%/&TWiki::Render::renderFormField( $meta, $1 )/ge;
      $text =~ s/%META{\s*"attachments"\s*(.*)}%/&TWiki::Attach::renderMetaData( $theWeb,
                                                  $theTopic, $meta, $1, $isTopRev )/ge;                                       #renders attachment tables
      $text =~ s/%META{\s*"moved"\s*}%/&TWiki::Render::renderMoved( $theWeb, $theTopic, $meta )/ge;      #render topic moved information
Index: lib/TWiki/Form.pm
===================================================================
RCS file: /e/www/CVS/twiki-cairo/lib/TWiki/Form.pm,v
retrieving revision 1.1
retrieving revision 1.1.4.6
diff -c -r1.1 -r1.1.4.6
*** lib/TWiki/Form.pm	7 Sep 2004 17:16:58 -0000	1.1
--- lib/TWiki/Form.pm	16 Feb 2005 17:27:07 -0000	1.1.4.6
***************
*** 33,39 ****
  # Get definition from supplied topic text
  # Returns array of arrays
  #   1st - list fields
! #   2nd - name, title, type, size, vals, tooltip, setting
  =pod
  
  ---++ sub getFormDefinition (  $text  )
--- 33,40 ----
  # Get definition from supplied topic text
  # Returns array of arrays
  #   1st - list fields
! #   2nd - name, title, type, size, vals, tooltip, attributes
! #   Possible attributes are "S" (field used as setting), "M" (mandatory field)
  =pod
  
  ---++ sub getFormDefinition (  $text  )
***************
*** 61,67 ****
--- 62,76 ----
                      my( $title, $type, $size, $vals, $tooltip, $attributes ) = split( /\|/ );
                      $title =~ s/^\s*//go;
                      $title =~ s/\s*$//go;
+ 		    my $referenced = "";
+ 		    #PeterKlausner's [[CoreTeam][Approve by]] as field definition
+ 		    if( $title =~ /\[\[(.+)\]\[(.+)\]\]/ )  { # use common defining
+ 		      $referenced = _cleanField( $1 );              # topics with diff.
+ 		      $title = $2;                            # field titles
+ 		    }
                      my $name = _cleanField( $title );
+ 		    $referenced = $name unless $referenced;
+  
                      $type = lc $type;
                      $attributes =~ s/\s*//go;
                      $attributes = "" if( ! $attributes );
***************
*** 79,84 ****
--- 88,94 ----
                          }
                      }
                      $size = 1 if( ! $size );
+ 		    $vals =~ s/%SEARCH{(.*?)}%/&TWiki::handleSearchWeb($1)/geo;
                      $vals =~ s/^\s*//go;
                      $vals =~ s/\s*$//go;
                      $vals =~ s/"//go; # " would break parsing off META variables
***************
*** 88,94 ****
                      $tooltip =~ s/^\s*//go;
                      $tooltip =~ s/\s*$//go;
                      # FIXME object if too short
!                     push @fields, [ $name, $title, $type, $size, $vals, $tooltip, $attributes ];
              } else {
                  $inBlock = 0;
              }
--- 98,104 ----
                      $tooltip =~ s/^\s*//go;
                      $tooltip =~ s/\s*$//go;
                      # FIXME object if too short
!                     push @fields, [ $name, $title, $type, $size, $vals, $tooltip, $attributes, $referenced ];
              } else {
                  $inBlock = 0;
              }
***************
*** 191,204 ****
      # Get each field definition
      foreach my $fieldDefP ( @fieldDefs ) {
          my @fieldDef = @$fieldDefP;
!         my( $name, $title, $type, $size, $posValuesS, $tooltip, $attributes ) = @fieldDef;
          my @posValues = ();
          if( $posValuesS ) {
!            @posValues = split( /,\s*/, $posValuesS );
!         }
! 
!         if( ( ! @posValues ) && &TWiki::Store::topicExists( $webName, $name ) ) {
!             my( $meta, $text ) = &TWiki::Store::readTopic( $webName, $name );
              @posValues = getPossibleFieldValues( $text );
              if( ! $type ) {
                  $type = "select";  #FIXME keep?
--- 201,220 ----
      # Get each field definition
      foreach my $fieldDefP ( @fieldDefs ) {
          my @fieldDef = @$fieldDefP;
!         my( $name, $title, $type, $size, $posValuesS, $tooltip, $attributes, $referenced ) = @fieldDef;
          my @posValues = ();
          if( $posValuesS ) {
!  	  if ((!($type eq "text")) && (!($type eq "textarea"))) {
!  	    @posValues = split( /,\s*/, $posValuesS );
!  	  } else {
!  	    @posValues = ( $posValuesS );
!  	  }
!  	}
! 
!         if( ( ! @posValues ) && &TWiki::Store::topicExists( $webName, $referenced ) ) {
!             my( $meta, $text ) = &TWiki::Store::readTopic( $webName, $referenced );
! 	    #SVEN - add processing of SEARCHES for Lists
! 	    $text =~ s/%SEARCH{(.*?)}%/&TWiki::handleSearchWeb($1)/geo;
              @posValues = getPossibleFieldValues( $text );
              if( ! $type ) {
                  $type = "select";  #FIXME keep?
***************
*** 218,223 ****
--- 234,240 ----
  
  ---++ sub _link (  $web, $name, $tooltip, $heading, $align, $span, $extra  )
  
+ # NOTE: Tooltip must not contain double quotes
  Not yet documented.
  
  =cut
***************
*** 249,255 ****
      
      my $link = "$name";
      
!     if( &TWiki::Store::topicExists( $web, $name ) ) {
          ( $web, $name ) = &TWiki::Store::normalizeWebTopicName( $web, $name );
          if( ! $tooltip ) {
              $tooltip = "Click to see details in separate window";
--- 266,273 ----
      
      my $link = "$name";
      
!     if( $span && &TWiki::Store::topicExists( $web, $name ) ) {
!         # Note: do not link field headings, should space out $name
          ( $web, $name ) = &TWiki::Store::normalizeWebTopicName( $web, $name );
          if( ! $tooltip ) {
              $tooltip = "Click to see details in separate window";
***************
*** 296,301 ****
--- 314,321 ----
  {
      my( $web, $topic, $form, $meta, $query, $getValuesFromFormTopic, @fieldsInfo ) = @_;
  
+     my $mandatoryFieldsPresent = 0;
+ 
      my $chooseForm = "";   
      if( TWiki::Prefs::getPreferencesValue( "WEBFORMS", "$web" ) ) {
          $chooseForm = chooseFormButton( "Replace form..." );
***************
*** 316,321 ****
--- 336,342 ----
          my $size = shift @fieldInfo;
          my $tooltip = shift @fieldInfo;
          my $attributes = shift @fieldInfo;
+ 	$mandatoryFieldsPresent = 1 if $attributes =~ /M/;
  
          my %field = $meta->findOne( "FIELD", $fieldName );
          my $value = $field{"value"};
***************
*** 323,334 ****
              # Allow initialisation based on a preference
              $value = &TWiki::Prefs::getPreferencesValue($fieldName);
          }
!         if( ($getValuesFromFormTopic ) ) {
!             my $tmp = $fieldInfo[0] || "";
!             $value = &TWiki::handleCommonTags( $tmp, $topic );
          }
          $value = "" unless defined $value;  # allow "0" values
!         my $extra = "";
  
          $tooltip =~ s/&/&amp\;/g;
          $tooltip =~ s/"/&quot\;/g;
--- 344,355 ----
              # Allow initialisation based on a preference
              $value = &TWiki::Prefs::getPreferencesValue($fieldName);
          }
!         if( ((! defined $value)  && ($type !~ "^checkbox") && $getValuesFromFormTopic ) ) {
!             my $tmp = $fieldInfo[0];
!             $value = &TWiki::handleCommonTags( $tmp, $topic ) if (defined $tmp);
          }
          $value = "" unless defined $value;  # allow "0" values
! 	my $extra = ($attributes =~ /M/) ? "<font color=\"red\">*</font>" : "";
  
          $tooltip =~ s/&/&amp\;/g;
          $tooltip =~ s/"/&quot\;/g;
***************
*** 386,392 ****
          } elsif( $type =~ "^checkbox" ) {
              if( $type eq "checkbox+buttons" ) {
                  my $boxes = $#fieldInfo + 1;
!                 $extra = "<br />\n<input class=\"twikiEditFormCheckboxButton twikiCheckbox\" type=\"button\" value=\" Set \" onclick=\"checkAll(this, 2, $boxes, true)\" />&nbsp;\n" .
                           "<input class=\"twikiEditFormCheckboxButton twikiCheckbox\" type=\"button\" value=\"Clear\" onclick=\"checkAll(this, 1, $boxes, false)\" />\n";
              }
  
--- 407,413 ----
          } elsif( $type =~ "^checkbox" ) {
              if( $type eq "checkbox+buttons" ) {
                  my $boxes = $#fieldInfo + 1;
!                 $extra .= "<br />\n<input class=\"twikiEditFormCheckboxButton twikiCheckbox\" type=\"button\" value=\" Set \" onclick=\"checkAll(this, 2, $boxes, true)\" />&nbsp;\n" .
                           "<input class=\"twikiEditFormCheckboxButton twikiCheckbox\" type=\"button\" value=\"Clear\" onclick=\"checkAll(this, 1, $boxes, false)\" />\n";
              }
  
***************
*** 444,449 ****
--- 465,471 ----
          $text .= "   <tr> " . _link( $web, $title, $tooltip, "h", "right", "", $extra ) . "<td align=\"left\"> $value </td> </tr>\n";
      }
      $text .= "</table></div>\n";
+     $text .= "<font color=\"red\">* indicates mandatory fields</font>\n" if $mandatoryFieldsPresent; 
      
      return $text;
  }
***************
*** 476,481 ****
--- 498,504 ----
  # =============================
  # Form parameters to meta
  # Note that existing meta information for fields is removed unless $justOverride is true
+ # Note that return value is never used
  =pod
  
  ---++ sub fieldVars2Meta (  $webName, $query, $meta, $justOverride  )
***************
*** 486,492 ****
  
  sub fieldVars2Meta
  {
!    my( $webName, $query, $meta, $justOverride ) = @_;
     
     $meta->remove( "FIELD" ) if( ! $justOverride );
     
--- 509,515 ----
  
  sub fieldVars2Meta
  {
!    my( $webName, $query, $meta, $justOverride, $handleMandatory, $topic ) = @_;
     
     $meta->remove( "FIELD" ) if( ! $justOverride );
     
***************
*** 503,508 ****
--- 526,533 ----
         my $attributes = shift @fieldInfo;
         my $value     = $query->param( $fieldName );
         my $cvalue    = "";
+ 
+        my $mandatory = ($attributes =~ /M/)?1:0;
         
         if( ! $value && $type =~ "^checkbox" ) {
            foreach my $name ( @fieldInfo ) {
***************
*** 526,531 ****
--- 551,562 ----
                
         # Have title and name stored so that topic can be viewed without reading in form definition
         $value = "" if( ! defined( $value ) && ! $justOverride );
+        if ( ($value eq "") && $handleMandatory && $mandatory ) {
+ 	 # Create own oops, find topic instead of "" requires passing it in from caller as $query->param('topic') has been changed.
+ 	 my $url = &TWiki::Func::getOopsUrl( $webName, $topic, "oopsfielderr", $title);
+ 	 TWiki::redirect( $query, $url );
+ 	 return 0;
+        }
         if( defined( $value ) ) {
             my @args = ( "name" =>  $fieldName,
                          "title" => $title,
***************
*** 536,542 ****
         }
     }
     
!    return $meta;
  }
  
  
--- 567,573 ----
         }
     }
     
!    return 1;
  }
  
  
Index: lib/TWiki/UI/Preview.pm
===================================================================
RCS file: /e/www/CVS/twiki-cairo/lib/TWiki/UI/Preview.pm,v
retrieving revision 1.1
retrieving revision 1.1.4.1
diff -c -r1.1 -r1.1.4.1
*** lib/TWiki/UI/Preview.pm	7 Sep 2004 17:16:58 -0000	1.1
--- lib/TWiki/UI/Preview.pm	27 Dec 2004 16:54:58 -0000	1.1.4.1
***************
*** 83,89 ****
      }
  
      # get the edited text and combine text, form and attachments for preview
!     &TWiki::Form::fieldVars2Meta( $webName, $query, $meta );
      $text = $textparam;
      if( ! $text ) {
        # empty topic not allowed
--- 83,89 ----
      }
  
      # get the edited text and combine text, form and attachments for preview
!     &TWiki::Form::fieldVars2Meta( $webName, $query, $meta, 0, 1, $topic );
      $text = $textparam;
      if( ! $text ) {
        # empty topic not allowed
Index: lib/TWiki/UI/Save.pm
===================================================================
RCS file: /e/www/CVS/twiki-cairo/lib/TWiki/UI/Save.pm,v
retrieving revision 1.2
retrieving revision 1.2.4.2
diff -c -r1.2 -r1.2.4.2
*** lib/TWiki/UI/Save.pm	26 Dec 2004 12:38:29 -0000	1.2
--- lib/TWiki/UI/Save.pm	30 Jan 2005 22:09:46 -0000	1.2.4.2
***************
*** 153,159 ****
      use TWiki::Form;
      # CODE_SMELL: this fieldVars2Meta thing should be in UI, not Meta
  	# Expand field variables, unless this new page is templated
!     TWiki::Form::fieldVars2Meta( $webName, $query, $meta ) unless $templatetopic;
      use TWiki::Prefs;
      $text = TWiki::Prefs::updateSetFromForm( $meta, $text );
    }
--- 153,160 ----
      use TWiki::Form;
      # CODE_SMELL: this fieldVars2Meta thing should be in UI, not Meta
  	# Expand field variables, unless this new page is templated
!     my $success = TWiki::Form::fieldVars2Meta( $webName, $query, $meta, 0, 1, $topic ) unless $templatetopic;
!     return 0 unless ($success);
      use TWiki::Prefs;
      $text = TWiki::Prefs::updateSetFromForm( $meta, $text );
    }
Index: lib/TWiki/Render.pm
===================================================================
RCS file: /e/www/CVS/twiki-cairo/lib/TWiki/Render.pm,v
retrieving revision 1.2
retrieving revision 1.2.8.3
diff -c -r1.2 -r1.2.8.3
*** lib/TWiki/Render.pm	26 Dec 2004 12:38:28 -0000	1.2
--- lib/TWiki/Render.pm	17 Feb 2005 17:14:49 -0000	1.2.8.3
***************
*** 244,259 ****
  Not yet documented.
  
  =cut
- 
  sub renderFormData
  {
      my( $web, $topic, $meta ) = @_;
  
!     my $metaText = "";
      
      my %form = $meta->findOne( "FORM" );
      if( %form ) {
!         my $name = $form{"name"};
          $metaText = "<div class=\"twikiForm\">\n";
          $metaText .= "<p></p>\n"; # prefix empty line
          $metaText .= "|*[[$name]]*||\n"; # table header
--- 244,284 ----
  Not yet documented.
  
  =cut
  sub renderFormData
  {
      my( $web, $topic, $meta ) = @_;
  
!     my ($notused, $metaText) = "";
      
      my %form = $meta->findOne( "FORM" );
      if( %form ) {
!       my $name = $form{"name"};
! 
!       # Note: Templates are form-specific and must match the form name
!       #       but have extension "tmpl"
!       my $template = $name . "Template";
! 
!       # Should strip web from $template. Automatically done in Beijing?
!       my $templateExists = &TWiki::Store::topicExists( $web, $template );
!       if( $templateExists ) {
! 	( $notused, $metaText ) = &TWiki::Store::readTopic( $web, $template );
!         my @fields = $meta->find( "FIELD" );
!         foreach my $field ( @fields ) {
! 	  my $title = $field->{"name"};
! 	  my $value = $field->{"value"};
! 	  if( defined $value ) {
! 	    # change any new line character sequences to <br />
! 	    $value =~ s/(\n\r?)|(\r\n?)+/<br \/>/gos;
! 	    # escape "|" to HTML entity
! 	    $value =~ s/\|/\&\#124;/gos;
! 	  } else { 
! 	    $value = "&nbsp;";
! 	  }
! 	  $metaText =~ s/%META{\s*"formfield"\s*name\s*=\s*"$title"\s*}%/$value/g;
!         }
! 	$metaText =~ s/%META{\s*"formfield"\s*name\s*=\s*".*"\s*}%/\&nbsp;/g;
! 
!       } else {
          $metaText = "<div class=\"twikiForm\">\n";
          $metaText .= "<p></p>\n"; # prefix empty line
          $metaText .= "|*[[$name]]*||\n"; # table header
***************
*** 261,270 ****
          foreach my $field ( @fields ) {
              my $title = $field->{"title"};
              my $value = $field->{"value"};
!             $value =~ s/\n/<br \/>/g;      # undo expansion
              $metaText .= "|  $title:|$value  |\n";
          }
          $metaText .= "\n</div>";
      }
  
      return $metaText;
--- 286,299 ----
          foreach my $field ( @fields ) {
              my $title = $field->{"title"};
              my $value = $field->{"value"};
! 	    # change any new line character sequences to <br />
! 	    $value =~ s/(\n\r?)|(\r\n?)+/<br \/>/gos;
! 	    # escape "|" to HTML entity
! 	    $value =~ s/\|/\&\#124;/gos;
              $metaText .= "|  $title:|$value  |\n";
          }
          $metaText .= "\n</div>";
+       }
      }
  
      return $metaText;
